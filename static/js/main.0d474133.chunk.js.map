{"version":3,"sources":["components/Form/Form.module.scss","components/ContactsList/ContactsList.module.scss","App.module.scss","components/Filter/Filter.module.scss","components/Alert/Alert.module.scss","contactsArr.js","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/Alert/Alert.js","components/Form/Form.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","contactsList","id","uuidv4","name","number","actions","addContact","createAction","payload","deleteContact","contact_filter","contacts","createReducer","contactsArr","state","filter","contact","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","phonebook","persistReducer","phonebookReduser","devTools","process","storeObj","persistor","persistStore","Alert","className","styles","alert","Form","getContactValue","e","currentTarget","value","setState","findContactName","contactName","props","find","handleSubmit","preventDefault","resetInput","setTimeout","this","onSubmit","form","CSSTransition","in","appear","timeout","classNames","unmountOnExit","label","inputs","type","autoComplete","pattern","title","required","onChange","button","React","Component","connect","dispatch","phonebookActions","filterContactsValue","normalizeFilter","toLowerCase","includes","TransitionGroup","component","list","map","item","item_name","item_number","onClick","target","input","App","container","contacts_container","contact_title","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.0d474133.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1c_P7\",\"label\":\"Form_label__1CqJP\",\"inputs\":\"Form_inputs__1xcUx\",\"button\":\"Form_button__1wpgR\",\"enter\":\"Form_enter__3YJi4\",\"enterActive\":\"Form_enterActive__2fBkD\",\"exit\":\"Form_exit__3R54y\",\"exitActive\":\"Form_exitActive__3LlvN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__1VDVW\",\"item\":\"ContactsList_item__9OtNa\",\"item_name\":\"ContactsList_item_name__13itm\",\"item_number\":\"ContactsList_item_number__jNxCS\",\"button\":\"ContactsList_button__2AdF7\",\"enter\":\"ContactsList_enter__1LmBj\",\"enterActive\":\"ContactsList_enterActive__36Oq0\",\"exit\":\"ContactsList_exit__3J8gU\",\"exitActive\":\"ContactsList_exitActive__2rwJo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2wKyO\",\"contacts_container\":\"App_contacts_container__Qr3Es\",\"contact_title\":\"App_contact_title__3Hfts\",\"title\":\"App_title__RNW-E\",\"appear\":\"App_appear__27id6\",\"appearActive\":\"App_appearActive__22XjP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__ex3sd\",\"input\":\"Filter_input__3yUfi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__RYHnh\"};","import { v4 as uuidv4 } from 'uuid';\r\nconst contactsList = [\r\n  { id: uuidv4(), name: 'Homer Simpson', number: '+1-(217)-459-12-56' },\r\n  { id: uuidv4(), name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: uuidv4(), name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: uuidv4(), name: 'Eden Clements', number: '645-17-79' },\r\n  { id: uuidv4(), name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\nexport default contactsList;\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('phonebook/add', (name, number) => {\r\n  return {\r\n    payload: {\r\n      name,\r\n      number,\r\n      id: uuidv4(),\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction('phonebook/delete');\r\nconst contact_filter = createAction('phonebook/contact_filter');\r\n\r\nconst actions = {\r\n  addContact,\r\n  deleteContact,\r\n  contact_filter,\r\n};\r\nexport default actions;\r\n","import { combineReducers } from 'redux';\r\nimport contactsArr from '../../contactsArr';\r\n\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './phonebook-actions';\r\n\r\nconst contacts = createReducer(contactsArr, {\r\n  [actions.addContact]: (state, { payload }) => [payload, ...state],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.contact_filter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import phonebookReduser from './phonebook/phonebook-reducer';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: persistReducer(contactsPersistConfig, phonebookReduser),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst storeObj = {\r\n  store,\r\n  persistor,\r\n};\r\n\r\nexport default storeObj;\r\n","import styles from './Alert.module.scss';\r\nconst Alert = () => {\r\n  return <div className={styles.alert}>Contact already exists</div>;\r\n};\r\nexport default Alert;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Alert from '../Alert';\r\n\r\nimport styles from './Form.module.scss';\r\n\r\nclass Form extends React.Component {\r\n  static propTypes = {\r\n    addContact: PropTypes.func.isRequired,\r\n  };\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    alert: false,\r\n  };\r\n  getContactValue = e => {\r\n    const { value, name } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  findContactName = contactName => {\r\n    const { contacts } = this.props;\r\n    return contacts.find(({ name }) => name === contactName);\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { name, number } = this.state;\r\n    e.preventDefault();\r\n    if (this.findContactName(name)) {\r\n      this.resetInput();\r\n      this.setState({ alert: true });\r\n      setTimeout(() => this.setState({ alert: false }), 2000);\r\n\r\n      return;\r\n    }\r\n    this.props.addContact(name, number);\r\n    this.resetInput();\r\n  };\r\n  resetInput = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    const { name, number, alert } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <CSSTransition\r\n          in={alert}\r\n          appear\r\n          timeout={500}\r\n          classNames={styles}\r\n          unmountOnExit\r\n        >\r\n          <Alert />\r\n        </CSSTransition>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.inputs}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            autoComplete=\"off\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={this.getContactValue}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.inputs}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            autoComplete=\"off\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={this.getContactValue}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styles.button}>\r\n          add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.phonebook.contacts,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addContact: (name, number) =>\r\n    dispatch(phonebookActions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\r\n\r\nimport styles from './ContactsList.module.scss';\r\n\r\nconst ContactsList = ({ contacts, deleteContact }) => (\r\n  <TransitionGroup component=\"ul\" className={styles.list}>\r\n    {contacts.map(({ name, id, number }) => (\r\n      <CSSTransition key={id} timeout={250} classNames={styles}>\r\n        <li key={id} className={styles.item}>\r\n          <span className={styles.item_name}>{name}</span>\r\n          <span className={styles.item_number}>{number}</span>\r\n\r\n          <button\r\n            className={styles.button}\r\n            type=\"button\"\r\n            onClick={() => deleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      </CSSTransition>\r\n    ))}\r\n  </TransitionGroup>\r\n);\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst filterContactsValue = (filter, contacts) => {\r\n  const normalizeFilter = filter.toLowerCase();\r\n  return contacts.filter(({ name }) => {\r\n    return name.toLowerCase().includes(normalizeFilter);\r\n  });\r\n};\r\n\r\nconst mapStateToProps = ({ phonebook: { filter, contacts } }) => {\r\n  return { contacts: filterContactsValue(filter, contacts) };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(phonebookActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\r\n\r\nimport styles from './Filter.module.scss';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        onChange={onChange}\r\n        value={filter}\r\n        autoComplete=\"off\"\r\n      />\r\n    </label>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n};\r\nconst mapStateToProps = state => ({\r\n  filter: state.phonebook.filter,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(phonebookActions.contact_filter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Form from './components/Form';\r\nimport ContactsList from './components/ContactsList';\r\nimport Filter from './components/Filter';\r\n\r\nimport styles from './App.module.scss';\r\n\r\nconst App = () => {\r\n  return (\r\n    <section className={styles.container}>\r\n      <CSSTransition\r\n        in={true}\r\n        appear={true}\r\n        timeout={500}\r\n        classNames={{ ...styles }}\r\n        unmountOnExit\r\n      >\r\n        <h1 className={styles.title}>Phonebook</h1>\r\n      </CSSTransition>\r\n\r\n      <Form></Form>\r\n      <div className={styles.contacts_container}>\r\n        <h2 className={styles.contact_title}>Contacts</h2>\r\n        <Filter />\r\n        <ContactsList />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport 'modern-normalize';\r\nimport './styles.scss';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}